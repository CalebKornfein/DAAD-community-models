# LNFZ + R-squared sd
LNFZ_cv_model
sd(LNFZ_cv_model$resample$Rsquared)
# KRAD + R-squared sd
KRAD_cv_model
sd(KRAD_cv_model$resample$Rsquared)
# Cross Validation Results
PKW_cv_r2 <- PKW_cv_model$results$Rsquared
SNFZ_cv_r2 <- SNFZ_cv_model$results$Rsquared
LNFZ_cv_r2 <- LNFZ_cv_model$results$Rsquared
KRAD_cv_r2 <- KRAD_cv_model$results$Rsquared
# R-squared values
# PKW:  No int: .6797, int: .6401
# SNFZ: No int: .4824, int: .4604
# LNFZ: No int: .6305, int: .5829
# KRAD: No int: .6690, int: .6242
PKW_cv_model$bestTune
PKW_cv_model
PKW_cv_model$modelInfo
PKW_cv_model$coefnames
PKW_cv_model
# Models no intercept
PKW_model <- lm(PKW ~ .-1, data=PKW_data)
SNFZ_model <- lm(SNFZ ~ .-1, data=SNFZ_data)
LNFZ_model <- lm(LNFZ ~ .-1, data=LNFZ_data)
KRAD_model <- lm(Krad ~ .-1, data=KRAD_data)
# Models with intercept
PKW_model_intercept<- lm(PKW ~ ., data=PKW_data)
SNFZ_model_intercept<- lm(SNFZ ~ ., data=SNFZ_data)
LNFZ_model_intercept <- lm(LNFZ ~ ., data=LNFZ_data)
KRAD_model_intercept <- lm(Krad ~ ., data=KRAD_data)
# Original MLR in sample prediction
PKW_original_train_prediction <- predict(PKW_model, train)
SNFZ_original_train_prediction <- predict(SNFZ_model, train)
LNFZ_original_train_prediction <- predict(LNFZ_model, train)
KRAD_original_train_prediction <- predict(KRAD_model, train)
# Original MLR out of sample prediction
PKW_original_prediction <- predict(PKW_model, community_predict_data)
SNFZ_original_prediction <- predict(SNFZ_model, community_predict_data)
LNFZ_original_prediction <- predict(LNFZ_model, community_predict_data)
KRAD_original_prediction <- predict(KRAD_model, community_predict_data)
# Cross Validation
set.seed(1)
train.control <- trainControl(method = "repeatedcv", number = 5, savePredictions = TRUE)
PKW_cv_model <- train(PKW ~.-1, data = PKW_data, method = "lm",
trControl = train.control)
SNFZ_cv_model <- train(SNFZ ~.-1, data = SNFZ_data, method = "lm",
trControl = train.control)
LNFZ_cv_model <- train(LNFZ ~.-1, data = LNFZ_data, method = "lm",
trControl = train.control)
KRAD_cv_model <- train(Krad ~.-1, data = KRAD_data, method = "lm",
trControl = train.control)
# PKW + R-squared sd
PKW_cv_model
sd(PKW_cv_model$resample$Rsquared)
# SNFZ + R-squared sd
SNFZ_cv_model
sd(SNFZ_cv_model$resample$Rsquared)
# LNFZ + R-squared sd
LNFZ_cv_model
sd(LNFZ_cv_model$resample$Rsquared)
# KRAD + R-squared sd
KRAD_cv_model
sd(KRAD_cv_model$resample$Rsquared)
# Cross Validation Results
PKW_cv_r2 <- PKW_cv_model$results$Rsquared
SNFZ_cv_r2 <- SNFZ_cv_model$results$Rsquared
LNFZ_cv_r2 <- LNFZ_cv_model$results$Rsquared
KRAD_cv_r2 <- KRAD_cv_model$results$Rsquared
# R-squared values
# PKW:  No int: .6797, int: .6401
# SNFZ: No int: .4824, int: .4604
# LNFZ: No int: .6305, int: .5829
# KRAD: No int: .6690, int: .6242
knitr::opts_chunk$set(echo = FALSE)
library(readxl)
library(car)
library(glmnet)
library(dplyr)
library(caret)
community_train_data <- read_excel("Communities_train.xlsx")
community_predict_data <- read_excel("Communities_predict.xlsx")
train <- community_train_data[ , !names(community_train_data) %in%  c("PKW", "LNFZ", "SNFZ", "Krad")]
PKW <- community_train_data$PKW
SNFZ <- community_train_data$SNFZ
LNFZ <- community_train_data$LNFZ
KRAD <- community_train_data$Krad
PKW_data <- community_train_data[ , !names(community_train_data) %in% c("LNFZ", "SNFZ", "Krad")]
LNFZ_data <- community_train_data[ , !names(community_train_data) %in% c("PKW", "SNFZ", "Krad")]
SNFZ_data <- community_train_data[ , !names(community_train_data) %in% c("PKW", "LNFZ", "Krad")]
KRAD_data <- community_train_data[ , !names(community_train_data) %in% c("PKW", "LNFZ", "SNFZ")]
# Models no intercept
PKW_model <- lm(PKW ~ .-1, data=PKW_data)
SNFZ_model <- lm(SNFZ ~ .-1, data=SNFZ_data)
LNFZ_model <- lm(LNFZ ~ .-1, data=LNFZ_data)
KRAD_model <- lm(Krad ~ .-1, data=KRAD_data)
# Models with intercept
PKW_model_intercept<- lm(PKW ~ ., data=PKW_data)
SNFZ_model_intercept<- lm(SNFZ ~ ., data=SNFZ_data)
LNFZ_model_intercept <- lm(LNFZ ~ ., data=LNFZ_data)
KRAD_model_intercept <- lm(Krad ~ ., data=KRAD_data)
# Original MLR in sample prediction
PKW_original_train_prediction <- predict(PKW_model, train)
SNFZ_original_train_prediction <- predict(SNFZ_model, train)
LNFZ_original_train_prediction <- predict(LNFZ_model, train)
KRAD_original_train_prediction <- predict(KRAD_model, train)
# Original MLR out of sample prediction
PKW_original_prediction <- predict(PKW_model, community_predict_data)
SNFZ_original_prediction <- predict(SNFZ_model, community_predict_data)
LNFZ_original_prediction <- predict(LNFZ_model, community_predict_data)
KRAD_original_prediction <- predict(KRAD_model, community_predict_data)
# Cross Validation
train.control <- trainControl(method = "repeatedcv", number = 5, savePredictions = TRUE)
set.seed(1)
PKW_cv_model <- train(PKW ~.-1, data = PKW_data, method = "lm",
trControl = train.control)
set.seed(1)
SNFZ_cv_model <- train(SNFZ ~.-1, data = SNFZ_data, method = "lm",
trControl = train.control)
set.seed(1)
LNFZ_cv_model <- train(LNFZ ~.-1, data = LNFZ_data, method = "lm",
trControl = train.control)
set.seed(1)
KRAD_cv_model <- train(Krad ~.-1, data = KRAD_data, method = "lm",
trControl = train.control)
# Cross Validation Results
# R-squared
PKW_cv_r2 <- PKW_cv_model$results$Rsquared
SNFZ_cv_r2 <- SNFZ_cv_model$results$Rsquared
LNFZ_cv_r2 <- LNFZ_cv_model$results$Rsquared
KRAD_cv_r2 <- KRAD_cv_model$results$Rsquared
# R-squared sd
PKW_cv_r2_sd <- sd(PKW_cv_model$resample$Rsquared)
SNFZ_cv_r2_sd <- sd(SNFZ_cv_model$resample$Rsquared)
LNFZ_cv_r2_sd <- sd(LNFZ_cv_model$resample$Rsquared)
KRAD_cv_r2_sd <- sd(KRAD_cv_model$resample$Rsquared)
# R-squared values
# PKW:  No int: .6797, int: .6401
# SNFZ: No int: .4824, int: .4604
# LNFZ: No int: .6305, int: .5829
# KRAD: No int: .6690, int: .6242
knitr::opts_chunk$set(echo = FALSE)
library(readxl)
library(car)
library(glmnet)
library(dplyr)
library(caret)
community_train_data <- read_excel("Communities_train.xlsx")
community_predict_data <- read_excel("Communities_predict.xlsx")
train <- community_train_data[ , !names(community_train_data) %in%  c("PKW", "LNFZ", "SNFZ", "Krad")]
PKW <- community_train_data$PKW
SNFZ <- community_train_data$SNFZ
LNFZ <- community_train_data$LNFZ
KRAD <- community_train_data$Krad
PKW_data <- community_train_data[ , !names(community_train_data) %in% c("LNFZ", "SNFZ", "Krad")]
LNFZ_data <- community_train_data[ , !names(community_train_data) %in% c("PKW", "SNFZ", "Krad")]
SNFZ_data <- community_train_data[ , !names(community_train_data) %in% c("PKW", "LNFZ", "Krad")]
KRAD_data <- community_train_data[ , !names(community_train_data) %in% c("PKW", "LNFZ", "SNFZ")]
# Models no intercept
PKW_model <- lm(PKW ~ .-1, data=PKW_data)
SNFZ_model <- lm(SNFZ ~ .-1, data=SNFZ_data)
LNFZ_model <- lm(LNFZ ~ .-1, data=LNFZ_data)
KRAD_model <- lm(Krad ~ .-1, data=KRAD_data)
# Models with intercept
PKW_model_intercept<- lm(PKW ~ ., data=PKW_data)
SNFZ_model_intercept<- lm(SNFZ ~ ., data=SNFZ_data)
LNFZ_model_intercept <- lm(LNFZ ~ ., data=LNFZ_data)
KRAD_model_intercept <- lm(Krad ~ ., data=KRAD_data)
# Original MLR in sample prediction
PKW_original_train_prediction <- predict(PKW_model, train)
SNFZ_original_train_prediction <- predict(SNFZ_model, train)
LNFZ_original_train_prediction <- predict(LNFZ_model, train)
KRAD_original_train_prediction <- predict(KRAD_model, train)
# Original MLR out of sample prediction
PKW_original_prediction <- predict(PKW_model, community_predict_data)
SNFZ_original_prediction <- predict(SNFZ_model, community_predict_data)
LNFZ_original_prediction <- predict(LNFZ_model, community_predict_data)
KRAD_original_prediction <- predict(KRAD_model, community_predict_data)
# Cross Validation
train.control <- trainControl(method = "repeatedcv", number = 5, savePredictions = TRUE)
set.seed(1)
PKW_cv_model <- train(PKW ~.-1, data = PKW_data, method = "lm",
trControl = train.control)
set.seed(1)
SNFZ_cv_model <- train(SNFZ ~.-1, data = SNFZ_data, method = "lm",
trControl = train.control)
set.seed(1)
LNFZ_cv_model <- train(LNFZ ~.-1, data = LNFZ_data, method = "lm",
trControl = train.control)
set.seed(1)
KRAD_cv_model <- train(Krad ~.-1, data = KRAD_data, method = "lm",
trControl = train.control)
# Cross Validation Results
# R-squared
PKW_cv_r2 <- PKW_cv_model$results$Rsquared
SNFZ_cv_r2 <- SNFZ_cv_model$results$Rsquared
LNFZ_cv_r2 <- LNFZ_cv_model$results$Rsquared
KRAD_cv_r2 <- KRAD_cv_model$results$Rsquared
# R-squared sd
PKW_cv_r2_sd <- sd(PKW_cv_model$resample$Rsquared)
SNFZ_cv_r2_sd <- sd(SNFZ_cv_model$resample$Rsquared)
LNFZ_cv_r2_sd <- sd(LNFZ_cv_model$resample$Rsquared)
KRAD_cv_r2_sd <- sd(KRAD_cv_model$resample$Rsquared)
# R-squared values
# PKW:  No int: .6797, int: .6401
# SNFZ: No int: .4824, int: .4604
# LNFZ: No int: .6305, int: .5829
# KRAD: No int: .6690, int: .6242
PKW_cv_r2
SNFZ_cv_r2
LNFZ_cv_r2
KRAD_cv_r2
PKW_cv_r2_sd
SNFZ_cv_r2_sd
LNFZ_cv_r2_sd
KRAD_cv_r2_sd
mean(community_train_data$PKW)
mean(community_train_data$LNFZ)
mean(community_train_data$SNFZ)
mean(community_train_data$Krad)
sum((PKW-mean(PKW)^2))
(PKW-mean(PKW))^2
sum((PKW-mean(PKW)^2))
sum((PKW-mean(PKW))^2)
/1100
sqrt(sum((PKW-mean(PKW))^2)/1100)
min(PKW)
max(PKW)
mean(PKW)
summary(community_train_data$PKW)
summary(community_train_data$SNFZ)
summary(community_train_data$LNFZ)
summary(community_train_data$Krad)
sd(PKW)
sd(community_train_data$PKW)
sd(community_train_data$SNFZ)
sd(community_train_data$LNFZ)
sd(community_train_data$Krad)
sum(PKW[PKW<97010338])/1100
PKW[PKW<97010338]
sum(length(PKW[PKW<97010338]))/1100
sum(length(SNFZ[SNFZ<10779736]))/length(PKW)
sum(length(PKW[PKW<97010338]))/length(PKW)
knitr::opts_chunk$set(echo = FALSE)
library(readxl)
library(car)
library(glmnet)
library(dplyr)
library(caret)
community_train_data <- read_excel("Communities_train.xlsx")
community_predict_data <- read_excel("Communities_predict.xlsx")
train <- community_train_data[ , !names(community_train_data) %in%  c("PKW", "LNFZ", "SNFZ", "Krad")]
PKW <- community_train_data$PKW
SNFZ <- community_train_data$SNFZ
LNFZ <- community_train_data$LNFZ
KRAD <- community_train_data$Krad
PKW_data <- community_train_data[ , !names(community_train_data) %in% c("LNFZ", "SNFZ", "Krad")]
LNFZ_data <- community_train_data[ , !names(community_train_data) %in% c("PKW", "SNFZ", "Krad")]
SNFZ_data <- community_train_data[ , !names(community_train_data) %in% c("PKW", "LNFZ", "Krad")]
KRAD_data <- community_train_data[ , !names(community_train_data) %in% c("PKW", "LNFZ", "SNFZ")]
# Models no intercept
PKW_model <- lm(PKW ~ .-1, data=PKW_data)
SNFZ_model <- lm(SNFZ ~ .-1, data=SNFZ_data)
LNFZ_model <- lm(LNFZ ~ .-1, data=LNFZ_data)
KRAD_model <- lm(Krad ~ .-1, data=KRAD_data)
# Models with intercept
PKW_model_intercept<- lm(PKW ~ ., data=PKW_data)
SNFZ_model_intercept<- lm(SNFZ ~ ., data=SNFZ_data)
LNFZ_model_intercept <- lm(LNFZ ~ ., data=LNFZ_data)
KRAD_model_intercept <- lm(Krad ~ ., data=KRAD_data)
# Original MLR in sample prediction
PKW_original_train_prediction <- predict(PKW_model, train)
SNFZ_original_train_prediction <- predict(SNFZ_model, train)
LNFZ_original_train_prediction <- predict(LNFZ_model, train)
KRAD_original_train_prediction <- predict(KRAD_model, train)
# Original MLR out of sample prediction
PKW_original_prediction <- predict(PKW_model, community_predict_data)
SNFZ_original_prediction <- predict(SNFZ_model, community_predict_data)
LNFZ_original_prediction <- predict(LNFZ_model, community_predict_data)
KRAD_original_prediction <- predict(KRAD_model, community_predict_data)
# Cross Validation
train.control <- trainControl(method = "repeatedcv", number = 5, savePredictions = TRUE)
set.seed(1)
PKW_cv_model <- train(PKW ~.-1, data = PKW_data, method = "lm",
trControl = train.control)
set.seed(1)
SNFZ_cv_model <- train(SNFZ ~.-1, data = SNFZ_data, method = "lm",
trControl = train.control)
set.seed(1)
LNFZ_cv_model <- train(LNFZ ~.-1, data = LNFZ_data, method = "lm",
trControl = train.control)
set.seed(1)
KRAD_cv_model <- train(Krad ~.-1, data = KRAD_data, method = "lm",
trControl = train.control)
# Cross Validation Results
# R-squared
PKW_cv_r2 <- PKW_cv_model$results$Rsquared
SNFZ_cv_r2 <- SNFZ_cv_model$results$Rsquared
LNFZ_cv_r2 <- LNFZ_cv_model$results$Rsquared
KRAD_cv_r2 <- KRAD_cv_model$results$Rsquared
# R-squared sd
PKW_cv_r2_sd <- sd(PKW_cv_model$resample$Rsquared)
SNFZ_cv_r2_sd <- sd(SNFZ_cv_model$resample$Rsquared)
LNFZ_cv_r2_sd <- sd(LNFZ_cv_model$resample$Rsquared)
KRAD_cv_r2_sd <- sd(KRAD_cv_model$resample$Rsquared)
# R-squared values
# PKW:  No int: .6797, int: .6401
# SNFZ: No int: .4824, int: .4604
# LNFZ: No int: .6305, int: .5829
# KRAD: No int: .6690, int: .6242
# Percent of observations with literature value less than overall MLR RMSE
PKW_MLR_percent <- sum(length(PKW[PKW<97010338]))/length(PKW)
SNFZ_MLR_percent <- sum(length(SNFZ[SNFZ<10779736]))/length(SNFZ)
LNFZ_MLR_percent <- sum(length(LNFZ[LNFZ<4490571]))/length(LNFZ)
LNFZ_MLR_percent <- sum(length(KRAD[KRAD<1741943]))/length(KRAD)
# Percent of observations with literature value less than overall XGBoost RMSE
PKW_MLR_percent <- sum(length(PKW[PKW<86526416]))/length(PKW)
SNFZ_MLR_percent <- sum(length(SNFZ[SNFZ<9412810]))/length(SNFZ)
LNFZ_MLR_percent <- sum(length(LNFZ[LNFZ<3741482]))/length(LNFZ)
LNFZ_MLR_percent <- sum(length(KRAD[KRAD<1347808]))/length(KRAD)
# Models no intercept
PKW_model <- lm(PKW ~ .-1, data=PKW_data)
SNFZ_model <- lm(SNFZ ~ .-1, data=SNFZ_data)
LNFZ_model <- lm(LNFZ ~ .-1, data=LNFZ_data)
KRAD_model <- lm(Krad ~ .-1, data=KRAD_data)
# Models with intercept
PKW_model_intercept<- lm(PKW ~ ., data=PKW_data)
SNFZ_model_intercept<- lm(SNFZ ~ ., data=SNFZ_data)
LNFZ_model_intercept <- lm(LNFZ ~ ., data=LNFZ_data)
KRAD_model_intercept <- lm(Krad ~ ., data=KRAD_data)
# Original MLR in sample prediction
PKW_original_train_prediction <- predict(PKW_model, train)
SNFZ_original_train_prediction <- predict(SNFZ_model, train)
LNFZ_original_train_prediction <- predict(LNFZ_model, train)
KRAD_original_train_prediction <- predict(KRAD_model, train)
# Original MLR out of sample prediction
PKW_original_prediction <- predict(PKW_model, community_predict_data)
SNFZ_original_prediction <- predict(SNFZ_model, community_predict_data)
LNFZ_original_prediction <- predict(LNFZ_model, community_predict_data)
KRAD_original_prediction <- predict(KRAD_model, community_predict_data)
# Cross Validation
train.control <- trainControl(method = "repeatedcv", number = 5, savePredictions = TRUE)
set.seed(1)
PKW_cv_model <- train(PKW ~.-1, data = PKW_data, method = "lm",
trControl = train.control)
set.seed(1)
SNFZ_cv_model <- train(SNFZ ~.-1, data = SNFZ_data, method = "lm",
trControl = train.control)
set.seed(1)
LNFZ_cv_model <- train(LNFZ ~.-1, data = LNFZ_data, method = "lm",
trControl = train.control)
set.seed(1)
KRAD_cv_model <- train(Krad ~.-1, data = KRAD_data, method = "lm",
trControl = train.control)
# Cross Validation Results
# R-squared
PKW_cv_r2 <- PKW_cv_model$results$Rsquared
SNFZ_cv_r2 <- SNFZ_cv_model$results$Rsquared
LNFZ_cv_r2 <- LNFZ_cv_model$results$Rsquared
KRAD_cv_r2 <- KRAD_cv_model$results$Rsquared
# R-squared sd
PKW_cv_r2_sd <- sd(PKW_cv_model$resample$Rsquared)
SNFZ_cv_r2_sd <- sd(SNFZ_cv_model$resample$Rsquared)
LNFZ_cv_r2_sd <- sd(LNFZ_cv_model$resample$Rsquared)
KRAD_cv_r2_sd <- sd(KRAD_cv_model$resample$Rsquared)
# R-squared values
# PKW:  No int: .6797, int: .6401
# SNFZ: No int: .4824, int: .4604
# LNFZ: No int: .6305, int: .5829
# KRAD: No int: .6690, int: .6242
# Percent of observations with literature value less than overall MLR RMSE
PKW_MLR_percent <- sum(length(PKW[PKW<97010338]))/length(PKW)
SNFZ_MLR_percent <- sum(length(SNFZ[SNFZ<10779736]))/length(SNFZ)
LNFZ_MLR_percent <- sum(length(LNFZ[LNFZ<4490571]))/length(LNFZ)
LNFZ_MLR_percent <- sum(length(KRAD[KRAD<1741943]))/length(KRAD)
# Percent of observations with literature value less than overall XGBoost RMSE
PKW_XGB_percent <- sum(length(PKW[PKW<86526416]))/length(PKW)
SNFZ_XGB_percent <- sum(length(SNFZ[SNFZ<9412810]))/length(SNFZ)
LNFZ_XGB_percent <- sum(length(LNFZ[LNFZ<3741482]))/length(LNFZ)
LNFZ_XGB_percent <- sum(length(KRAD[KRAD<1347808]))/length(KRAD)
PKW_MLR_percent
SNFZ_MLR_percent
LNFZ_MLR_percent
# Models no intercept
PKW_model <- lm(PKW ~ .-1, data=PKW_data)
SNFZ_model <- lm(SNFZ ~ .-1, data=SNFZ_data)
LNFZ_model <- lm(LNFZ ~ .-1, data=LNFZ_data)
KRAD_model <- lm(Krad ~ .-1, data=KRAD_data)
# Models with intercept
PKW_model_intercept<- lm(PKW ~ ., data=PKW_data)
SNFZ_model_intercept<- lm(SNFZ ~ ., data=SNFZ_data)
LNFZ_model_intercept <- lm(LNFZ ~ ., data=LNFZ_data)
KRAD_model_intercept <- lm(Krad ~ ., data=KRAD_data)
# Original MLR in sample prediction
PKW_original_train_prediction <- predict(PKW_model, train)
SNFZ_original_train_prediction <- predict(SNFZ_model, train)
LNFZ_original_train_prediction <- predict(LNFZ_model, train)
KRAD_original_train_prediction <- predict(KRAD_model, train)
# Original MLR out of sample prediction
PKW_original_prediction <- predict(PKW_model, community_predict_data)
SNFZ_original_prediction <- predict(SNFZ_model, community_predict_data)
LNFZ_original_prediction <- predict(LNFZ_model, community_predict_data)
KRAD_original_prediction <- predict(KRAD_model, community_predict_data)
# Cross Validation
train.control <- trainControl(method = "repeatedcv", number = 5, savePredictions = TRUE)
set.seed(1)
PKW_cv_model <- train(PKW ~.-1, data = PKW_data, method = "lm",
trControl = train.control)
set.seed(1)
SNFZ_cv_model <- train(SNFZ ~.-1, data = SNFZ_data, method = "lm",
trControl = train.control)
set.seed(1)
LNFZ_cv_model <- train(LNFZ ~.-1, data = LNFZ_data, method = "lm",
trControl = train.control)
set.seed(1)
KRAD_cv_model <- train(Krad ~.-1, data = KRAD_data, method = "lm",
trControl = train.control)
# Cross Validation Results
# R-squared
PKW_cv_r2 <- PKW_cv_model$results$Rsquared
SNFZ_cv_r2 <- SNFZ_cv_model$results$Rsquared
LNFZ_cv_r2 <- LNFZ_cv_model$results$Rsquared
KRAD_cv_r2 <- KRAD_cv_model$results$Rsquared
# R-squared sd
PKW_cv_r2_sd <- sd(PKW_cv_model$resample$Rsquared)
SNFZ_cv_r2_sd <- sd(SNFZ_cv_model$resample$Rsquared)
LNFZ_cv_r2_sd <- sd(LNFZ_cv_model$resample$Rsquared)
KRAD_cv_r2_sd <- sd(KRAD_cv_model$resample$Rsquared)
# R-squared values
# PKW:  No int: .6797, int: .6401
# SNFZ: No int: .4824, int: .4604
# LNFZ: No int: .6305, int: .5829
# KRAD: No int: .6690, int: .6242
# Percent of observations with literature value less than overall MLR RMSE
PKW_MLR_percent <- sum(length(PKW[PKW<97010338]))/length(PKW)
SNFZ_MLR_percent <- sum(length(SNFZ[SNFZ<10779736]))/length(SNFZ)
LNFZ_MLR_percent <- sum(length(LNFZ[LNFZ<4490571]))/length(LNFZ)
KRAD_MLR_percent <- sum(length(KRAD[KRAD<1741943]))/length(KRAD)
# Percent of observations with literature value less than overall XGBoost RMSE
PKW_XGB_percent <- sum(length(PKW[PKW<86526416]))/length(PKW)
SNFZ_XGB_percent <- sum(length(SNFZ[SNFZ<9412810]))/length(SNFZ)
LNFZ_XGB_percent <- sum(length(LNFZ[LNFZ<3741482]))/length(LNFZ)
KRAD_XGB_percent <- sum(length(KRAD[KRAD<1347808]))/length(KRAD)
LNFZ_MLR_percent
KRAD_MLR_percent
PKW_XGB_percent
SNFZ_XGB_percent
LNFZ_XGB_percent
KRAD_XGB_percent
view(community_train_data)
View(KRAD_data)
# Models no intercept
PKW_model <- lm(PKW ~ .-1, data=PKW_data)
SNFZ_model <- lm(SNFZ ~ .-1, data=SNFZ_data)
LNFZ_model <- lm(LNFZ ~ .-1, data=LNFZ_data)
KRAD_model <- lm(Krad ~ .-1, data=KRAD_data)
PKW_model
# Models with intercept
PKW_model_intercept<- lm(PKW ~ ., data=PKW_data)
SNFZ_model_intercept<- lm(SNFZ ~ ., data=SNFZ_data)
LNFZ_model_intercept <- lm(LNFZ ~ ., data=LNFZ_data)
KRAD_model_intercept <- lm(Krad ~ ., data=KRAD_data)
# Original MLR in sample prediction
PKW_original_train_prediction <- predict(PKW_model, train)
SNFZ_original_train_prediction <- predict(SNFZ_model, train)
LNFZ_original_train_prediction <- predict(LNFZ_model, train)
KRAD_original_train_prediction <- predict(KRAD_model, train)
# Original MLR out of sample prediction
PKW_original_prediction <- predict(PKW_model, community_predict_data)
SNFZ_original_prediction <- predict(SNFZ_model, community_predict_data)
LNFZ_original_prediction <- predict(LNFZ_model, community_predict_data)
KRAD_original_prediction <- predict(KRAD_model, community_predict_data)
# Cross Validation
train.control <- trainControl(method = "repeatedcv", number = 5, savePredictions = TRUE)
set.seed(1)
PKW_cv_model <- train(PKW ~.-1, data = PKW_data, method = "lm",
trControl = train.control)
set.seed(1)
SNFZ_cv_model <- train(SNFZ ~.-1, data = SNFZ_data, method = "lm",
trControl = train.control)
set.seed(1)
LNFZ_cv_model <- train(LNFZ ~.-1, data = LNFZ_data, method = "lm",
trControl = train.control)
set.seed(1)
KRAD_cv_model <- train(Krad ~.-1, data = KRAD_data, method = "lm",
trControl = train.control)
# Cross Validation Results
# R-squared
PKW_cv_r2 <- PKW_cv_model$results$Rsquared
SNFZ_cv_r2 <- SNFZ_cv_model$results$Rsquared
LNFZ_cv_r2 <- LNFZ_cv_model$results$Rsquared
KRAD_cv_r2 <- KRAD_cv_model$results$Rsquared
# R-squared sd
PKW_cv_r2_sd <- sd(PKW_cv_model$resample$Rsquared)
SNFZ_cv_r2_sd <- sd(SNFZ_cv_model$resample$Rsquared)
LNFZ_cv_r2_sd <- sd(LNFZ_cv_model$resample$Rsquared)
KRAD_cv_r2_sd <- sd(KRAD_cv_model$resample$Rsquared)
# R-squared values
# PKW:  No int: .6797, int: .6401
# SNFZ: No int: .4824, int: .4604
# LNFZ: No int: .6305, int: .5829
# KRAD: No int: .6690, int: .6242
# Percent of observations with literature value less than overall MLR RMSE
PKW_MLR_percent <- sum(length(PKW[PKW<97010338]))/length(PKW)
SNFZ_MLR_percent <- sum(length(SNFZ[SNFZ<10779736]))/length(SNFZ)
LNFZ_MLR_percent <- sum(length(LNFZ[LNFZ<4490571]))/length(LNFZ)
KRAD_MLR_percent <- sum(length(KRAD[KRAD<1741943]))/length(KRAD)
# Percent of observations with literature value less than overall XGBoost RMSE
PKW_XGB_percent <- sum(length(PKW[PKW<86526416]))/length(PKW)
SNFZ_XGB_percent <- sum(length(SNFZ[SNFZ<9412810]))/length(SNFZ)
LNFZ_XGB_percent <- sum(length(LNFZ[LNFZ<3741482]))/length(LNFZ)
KRAD_XGB_percent <- sum(length(KRAD[KRAD<1347808]))/length(KRAD)
